// Mocks generated by Mockito 5.4.6 from annotations
// in key_wallet_app/test/UnitTest/Services/nfc_services_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_nfc_kit/flutter_nfc_kit.dart' as _i2;
import 'package:key_wallet_app/services/nfc_kit_wrapper.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNFCTag_0 extends _i1.SmartFake implements _i2.NFCTag {
  _FakeNFCTag_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [NfcKitWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockNfcKitWrapper extends _i1.Mock implements _i3.NfcKitWrapper {
  MockNfcKitWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.NFCAvailability> get nfcAvailability =>
      (super.noSuchMethod(
            Invocation.getter(#nfcAvailability),
            returnValue: _i4.Future<_i2.NFCAvailability>.value(
              _i2.NFCAvailability.not_supported,
            ),
          )
          as _i4.Future<_i2.NFCAvailability>);

  @override
  _i4.Future<_i2.NFCTag> poll() =>
      (super.noSuchMethod(
            Invocation.method(#poll, []),
            returnValue: _i4.Future<_i2.NFCTag>.value(
              _FakeNFCTag_0(this, Invocation.method(#poll, [])),
            ),
          )
          as _i4.Future<_i2.NFCTag>);

  @override
  _i4.Future<void> finish() =>
      (super.noSuchMethod(
            Invocation.method(#finish, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> setIosAlertMessage(String? message) =>
      (super.noSuchMethod(
            Invocation.method(#setIosAlertMessage, [message]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [NFCTag].
///
/// See the documentation for Mockito's code generation for more information.
class MockNFCTag extends _i1.Mock implements _i2.NFCTag {
  MockNFCTag() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NFCTagType get type =>
      (super.noSuchMethod(
            Invocation.getter(#type),
            returnValue: _i2.NFCTagType.iso7816,
          )
          as _i2.NFCTagType);

  @override
  String get standard =>
      (super.noSuchMethod(
            Invocation.getter(#standard),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.getter(#standard),
            ),
          )
          as String);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i5.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}
